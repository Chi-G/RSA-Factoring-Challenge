#!/usr/bin/python3

import time
import math
import sys

def pollard_rho(n):
    # Check if the number is even
    if n % 2 == 0:
        return 2
    
    x = 2
    y = 2
    d = 1
    
    # Define the function for generating the next value in the sequence
    f = lambda x: (x**2 + 1) % n
    
    # Pollard's rho algorithm
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)
    
    return d

def is_prime(num):
    # Check for a number is prime
    if num < 2:
        # If num is less than 2, it is not prime, so return False
        return False
    for i in range(2, int(math.sqrt(num)) + 1):
        if num % i == 0:
            return False
    return True

def main():
    # Check for the correct number of command-line arguments is provided
    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
        return

    file_path = sys.argv[1]

    start_time = time.time()
    try:
        with open(file_path, 'r') as file:
            # Read the first line of the file and convert it to an integer
            number = int(file.readline().strip())
        p = pollard_rho(number)
        while not is_prime(p):
            p = pollard_rho(p)
        q = number //p
        if p == number or q == number:
            print(f"{number} is prime.")
        else:
            print(f"{number}={p}*{q}")

        if time.time() - start_time > 5:
            print("Time limit exceeded")
            exit()
    
    except FileNotFoundError:
        print(f"File '{file_path}' not found.")


if __name__ == '__main__':
    main()

